{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cart/cart.component.ts","./src/app/cart/cart.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/http-requests/http-requests.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/payment/payment.component.ts","./src/app/payment/payment.component.html","./src/app/product/product.component.ts","./src/app/product/product.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Ecomm-Client';\n}\n","<app-home></app-home>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CartComponent } from './cart/cart.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProductComponent } from './product/product.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { FormsModule } from '@angular/forms';\nimport { PaymentComponent } from './payment/payment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CartComponent,\n    HomeComponent,\n    ProductComponent,\n    LoginComponent,\n    RegistrationComponent,\n    PaymentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { HttpRequestsService } from '../http-requests/http-requests.service';\nimport { Product } from '../models/Product';\nimport { Paymethod } from '../models/Paymethod';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  @Input() cardSelect: string;\n  @Input() paymentInfoCompleted: boolean;\n  @Input() openCart: any;\n\n  @Output() closeCart: EventEmitter<any> = new EventEmitter();\n\n  cartItems : Product[];\n\n  payMethods : Paymethod[];\n\n  nullPaymethods : boolean = false;\n\n  methodSelected: boolean = false;\n\n  constructor(private httpRequest: HttpRequestsService) { }\n\n  ngOnInit(): void {\n\n    this.getCart();\n\n  }\n\n  removeItem(removedItem : string){\n\n    this.httpRequest.removeFromCart(removedItem).subscribe((res:any)=> {\n      \n    });\n\n  }\n\n  checkout(){\n\n      this.httpRequest.getPayMethods().subscribe((res:any) =>{\n        let methods = JSON.parse(res);\n        if(methods.length == 0){\n          this.nullPaymethods = true;\n        } else {\n          if(this.cardSelect != null){\n            this.methodSelected = true;\n          }\n        }\n      });\n  }\n\n  confirmOrder(){\n    this.httpRequest.checkout().subscribe((res: any) => {\n      if(res.contains(\"There is no item in your cart\")){\n        alert(\"You have no items in your cart!\");\n      } else {\n        this.openCart = false;\n        alert(res.toString());\n        this.closeCart.emit(this.openCart);\n      }\n    });\n  }\n\n  getCart(){\n    this.httpRequest.getCart().subscribe((res:any) => {\n\n      for(let object in res){\n\n        let var1 = JSON.parse(object);\n\n        let id = var1.id;\n\n        let item_name = var1.itemname;\n\n        let quantity = var1.quantity;\n\n        let item_type = var1.item_type;\n\n        let brand = var1.brand;\n\n        let price = var1.price;\n\n        let description = var1.description;\n\n        let prod : Product = { id : id, item_name : item_name , quantity : quantity, item_type : item_type, brand : brand, price : price, description : description };\n\n        this.cartItems.push(prod);\n\n      }\n\n    });\n  }\n\n}","<h1> Your Cart </h1>\n\n<div>\n    <ng-container *ngFor=\"let prod in cartItems\">\n      \n       <p> {{prod.item_name}} </p> \n\n       <p> {{prod.price | currency}} </p>\n\n       <!-- <p> {{ prod.image }} </p> -->\n\n       <p> qty : {{prod.quantity}} </p>\n\n       <button (click)=\"removeItem(prod.id)\"> Remove Item From Cart </button>\n\n    </ng-container>   \n\n    <ng-container *ngIf=\"methodSelected; else checkoutButton\">\n        <button (click)=\"confirmOrder()\">Confirm Order</button>\n    </ng-container>\n    <ng-template #checkoutButton>\n        <button (click)=\"checkout()\">Checkout</button>\n    </ng-template>\n\n  </div>\n\n  <!-- Insert checkout button here -->\n\n  <ng-container *ngIf=\"nullPaymethods\">\n\n      <app-product [paymentInfoInput] = \"this.payMethods\"></app-product>\n\n  </ng-container>\n\n  ","import { Component, OnInit } from '@angular/core';\nimport { HttpRequestsService } from '../http-requests/http-requests.service';\nimport { Product } from '../models/Product' ;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  Products: Product[];\n  selectedProduct: any;\n\n  prodDetails: boolean = false;\n  registrationSelected: boolean = false;\n  login: boolean = false;\n  openCart: boolean = false;\n\n  constructor(private httpRequest: HttpRequestsService) { }\n\n  ngOnInit(): void {\n    this.getProducts();\n  }\n\n  getProducts(){\n    this.httpRequest.getProducts().subscribe((res: any) => {\n      for(let obj in res){\n        let work = JSON.parse(obj);\n        let id = work.id;\n        let name = work.item_name;\n        let quantity = work.quantity;\n        let type = work.item_type;\n        let brand = work.brand;\n        let price = work.price;\n        let desc = work.description;\n\n        let prod: Product = { id: id, item_name: name, quantity: quantity, item_type: type, brand: brand, price: price, description: desc};\n        this.Products.push(prod);\n      }\n    });\n  }\n  register(){\n    this.registrationSelected = true;\n  }\n\n  openLogin(){\n    this.login = true;\n  }\n\n  openDetails(item: any){\n    this.prodDetails = true;\n    this.selectedProduct = item;\n  }\n\n  filter(){\n\n  }\n\n  sortProds(prodList: any) {\n    prodList.sort((obj1: any, obj2: any) => {\n      if (obj1.price > obj2.price ) {\n        return 1;\n      }\n\n      if (obj1.price < obj2.price) {\n        return -1;\n      }\n\n      return 0;\n    });\n  }\n\n}\n","<div class=\"header\">\n    <div class=\"topRight\">\n        <app-login></app-login>\n    </div>\n    <div class=\"filters\">\n\n    </div>  \n</div>\n\n<ng-container *ngFor=\"let product of Products\">\n    <div class=\"col-md-3 mb-5\">\n        <a (click)=\"openDetails(product)\">\n        <div class=\"card bg-light\">\n            <div class=\"card-body\">\n            <h5 class=\"card-title\">{{ product.title }}</h5>\n            <p class=\"card-text\">{{ product.price | currency}}</p>\n            </div>\n        </div>\n        </a>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"openCart\">\n<app-cart></app-cart>\n</ng-container>\n<ng-container *ngIf=\"this.prodDetails\">\n    <app-product [product]=\"this.selectedProduct\"></app-product>\n</ng-container>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpRequestsService {\n\n  apiUrl: String = \"http://teamm4413.us-east-1.elasticbeanstalk.com/\";\n\n  constructor(private http: HttpClient) { }\n\n  getToken() {\n    const token = localStorage.getItem('token');\n    return token ? new HttpHeaders().set('Authorization', token) : null;\n  }\n\n  register(email: String, password: String, lname: String, fname: String){\n    let url = this.apiUrl + \"register?email=\" + email + \"&password=\" + password + \"&fn=\" + fname + \"&ln=\" + lname;\n    return this.http.get(url);\n  }\n\n  login(email: String, password: String){\n    let url = this.apiUrl + \"login?email=\" + email + \"&password=\" + password;\n    return this.http.get(url);\n  }\n\n  getCart(){\n    let url = this.apiUrl + \"login?cart=true\";\n    return this.http.get(url);\n  }\n\n  removeFromCart(id: string){\n    let url = this.apiUrl +\"browse?id=\" + id + \"&add=false\";\n    return this.http.get(url);\n  }\n\n  // Adds 1 item/product: `id`  to cart\n  addToCart(id: string){\n    let url = this.apiUrl + \"browse?id=\" + id + \"&add=true&\" + \"quantity=1\";\n    return this.http.get(url);\n  }\n\n  getProducts(){\n    let url = this.apiUrl + \"browse\";\n    return this.http.get(url);\n  }\n\n  paymentInfo(cardNum : String, cardHold: String, cvv: String, exprDate: String, street: String, city: String, zip: String, phoneNum: String) {\n    let url = this.apiUrl + \"pay_methods?card_number=\" + cardNum+ \"&card_holder=\" + cardHold + \"&cvv=\" + cvv + \"&street=\" + street + \"&city=\" + city + \"&zip=\" + zip + \"&phone=\" + phoneNum + \"&exp_date=\" + exprDate\n    return this.http.get(url);\n  }\n\n  getPayMethods(){\n    let url = this.apiUrl + \"pay_methods\";\n    return this.http.get(url);\n  }\n\n  checkout(){\n    let url = this.apiUrl + \"orders?purchase=true\";\n    return this.http.get(url);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { HttpRequestsService } from 'src/app/http-requests/http-requests.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email = '';\n  password = '';\n\n  openRegistration: boolean = false;\n\n  btnDisabled = false;\n\n  constructor(private httpRequest: HttpRequestsService) { }\n\n  ngOnInit(): void {\n  }\n\n  validate() {\n    if (this.email) {\n      if (this.password) {\n        return true;\n      } else {\n        alert('Password is not entered');\n      }\n    } else {\n      alert('Email is not entered.');\n    }\n  }\n\n  login(){\n    this.btnDisabled = true;\n    this.httpRequest.login(this.email, this.password).subscribe((res: any) => {\n      console.log(res);\n      if(res.status == '200'){\n        this.getCart();\n      } else {\n        alert('The account credentials are invalid!');\n      }\n    });\n  }\n  register(){\n    this.openRegistration = true;\n  }\n\n  getCart(){\n    this.httpRequest.getCart().subscribe((res: any) => {\n      console.log(res);\n    });\n  }\n\n}\n","<ng-container *ngIf=\"!openRegistration\">\n  <div class=\"container p-5\">\n    <div class=\"row mt-5\">\n      <div class=\"col-lg-4 offset-lg-4\">\n        <div class=\"card bg-light\">\n          <div class=\"card-body\">\n            <h4 class=\"text-center\">Login</h4>\n            <hr>\n            <form>\n              <div class=\"form-group\">\n                <label>Email</label>\n                <input type=\"email\" name=\"email\" class=\"form-control\" [(ngModel)]=\"email\">\n              </div>\n              <div class=\"form-group\">\n                <label>Password</label>\n                <input type=\"password\" name=\"password\" class=\"form-control\" [(ngModel)]=\"password\">\n              </div>\n              <hr>\n              <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"login()\" [disabled]=\"btnDisabled\">Login</button>\n              <br>\n              <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"register()\" [disabled]=\"btnDisabled\">Register</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"openRegistration\">\n  <app-registration></app-registration>\n</ng-container>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HttpRequestsService } from '../http-requests/http-requests.service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n\n  cardNum : String;\n  cardHold : String;\n  cvv : String;\n  exprDate : String;\n  street : String;\n  city : String;\n  zip : String;\n  phoneNum : String;\n  \n  @Input() PayMethods : any;\n  @Input() paymentInfoInput : boolean;\n  @Input() nullPaymethods: any;\n\n  @Output() updateFlag: EventEmitter<any> = new EventEmitter();\n  @Output() cardSelect : EventEmitter<any> = new EventEmitter();\n\n  constructor(private httpRequest : HttpRequestsService) { }\n\n  ngOnInit(): void {\n    this.getPayment()\n  }\n  \n  cardSelected(cardSelect: any){\n    this.cardSelect.emit(cardSelect);\n    this.nullPaymethods = false;\n    this.updateFlag.emit(this.nullPaymethods);\n  }\n\n  getPayment() {\n    this.httpRequest.paymentInfo(this.cardNum, this.cardHold, this.cvv, this.exprDate, \n      this.street, this.city, this.zip, this.phoneNum).subscribe((res : any) =>{\n        if(res.contains(\"Payment method inserted sucessfully\")) {\n          alert(\"Payment method successfully added!\")\n          this.paymentInfoInput = false;\n        }\n    })\n  }\n}\n","<header>Team M e-Store</header>\n<h1> Payment Method </h1>\n<ng-container *ngIf=\"this.paymentInfoInput; else selectMethod\">\n    <div class=\"row-container\">\n        <div class=\"input-container\">\n            <table>\n                <tr>\n                    <td><b><label for=\"\">Card Holder</label></b></td>\n                    <td><input type=\"text\" id=\"cardHold\" name=\"cardHold\" [(ngModel)]= \"cardHold\"/></td>\n                </tr>\n                <tr>\n                    <td><b><label for=\"\">Card Number</label></b></td>\n                    <td><input type=\"text\" id=\"cardNum\" name=\"cardNum\" [(ngModel)]= \"cardNum\"/></td>\n                </tr>\n                <tr>\n                    <td><b><label for=\"\">CVV</label></b></td>\n                    <td><input type=\"text\" id=\"cvv\" name=\"cvv\" [(ngModel)]= \"cvv\"/></td>\n                </tr>\n                <tr>\n                    <td><b><label for=\"\">Expiration Date</label></b></td>\n                    <td><input type=\"text\" id=\"exprDate\" name=\"exprDate\" [(ngModel)]= \"exprDate\"/></td>\n                </tr>\n                <tr>\n                    <td><b><label for=\"\">City</label></b></td>\n                    <td><input type=\"text\" id=\"city\" name=\"city\" [(ngModel)]= \"city\"/></td>\n                </tr>\n                <tr>\n                    <td><b><label for=\"\">Street</label></b></td>\n                    <td><input type=\"text\" id=\"street\" name=\"street\" [(ngModel)]= \"street\"/></td>\n                </tr>\n                <tr>\n                    <td><b><label for=\"\">Zip Code</label></b></td>\n                    <td><input type=\"text\" id=\"zip\" name=\"zip\" [(ngModel)]= \"zip\"/></td>\n                </tr>\n                <tr>\n                    <td><b><label for=\"\">Phone Number</label></b></td>\n                    <td><input type=\"text\" id=\"phoneNum\" name=\"phoneNum\" [(ngModel)]= \"phoneNum\"/></td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</ng-container>\n\n<ng-template #selectMethod>\n    <div class=\"row-container\"></div>\n    <form>\n        <select [(ngModel)]=\"cardSelect\" name=\"cardSelect\">\n            <ng-container *ngFor=\"let pay in PayMethods\">\n                <option (click)=\"cardSelected(pay.card_number)\">Card Number: {{pay.card_number}}. Card Holder: {{pay.card_holder}}</option>\n            </ng-container>\n        </select>\n        <br>\n    </form>\n</ng-template>","import { Component, OnInit, Input } from '@angular/core';\nimport { HttpRequestsService } from '../http-requests/http-requests.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  @Input() product: any;\n\n  constructor(private httpRequest: HttpRequestsService) { }\n\n  ngOnInit(): void {\n  }\n\n  addToCart(productID: string) {\n    this.httpRequest.addToCart(productID).subscribe((res: any) => {\n      let split = res.split('.');\n      let item = split[1];\n      if(res.contains(\"Item has been added successfully\")){\n        alert(\"You have added \" + item + \" to your cart\")\n      }\n    });\n  }\n\n}\n","<h1 align=\"center\">Our Products</h1>\n<div>\n    <ng-container *ngFor=\"let prod in product\">\n      <!-- how we want our products to be displayed -->\n      <h2>\n        {{ prod.itemName }}\n      </h2>\n      <p>{{ prod.brand }}</p>\n      \n      <!-- image maybe? -->\n      <!-- <p *ngIf=\"prod.image\"></p> -->\n      \n      <h3> {{ prod.price }} </h3>\n      \n      <p *ngIf=\"(prod.quantity ===  '0');else inStock\">\n        Out of Stock!\n      </p>\n      <ng-template #inStock>\n        <p>\n          Quantity in Stock: {{ prod.quantity }}\n        </p>      \n      </ng-template>\n  \n      <p *ngIf=\"prod.description\">      \n        Description: {{ prod.description }}\n      </p>\n\n      <button (click)=\"addToCart(prod.id)\">Add to Cart</button>\n  \n    </ng-container>    \n  </div>\n  \n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { HttpRequestsService } from '../http-requests/http-requests.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  @Input() openRegistration: any;\n  @Output() closeRegistration: EventEmitter<any> = new EventEmitter();\n\n  email: String;\n  password: String;\n  password1: String;\n  fname: String;\n  lname: String;\n\n  btnDisabled = false;\n\n  constructor(private httpRequest: HttpRequestsService) { }\n\n  ngOnInit(): void {\n  }\n\n  validateInputs(): boolean{\n    if (this.fname) {\n      if (this.lname){\n        if (this.email) {\n          if (this.password) {\n            if (this.password1) {\n              if (this.password === this.password1) {\n                return true;\n              } else {\n                alert('Passwords do not match.');\n              }\n            } else {\n              alert('Confirmation Password is not entered');\n            }\n          } else {\n            alert('Password is not entered');\n          }\n        } else {\n          alert('Email is not entered.');\n        }\n      } else {\n        alert('Last name is not entered.');\n      }\n    } else {\n      alert('First name is not entered.');\n    }\n\n    return false;\n  }\n\n  register(){\n    this.btnDisabled = true;\n    if(this.validateInputs()){\n      this.httpRequest.register(this.email, this.password, this.fname, this.lname).subscribe((res: any) => {\n        if(res === 'Result: 1 Registered successfully!'){\n          this.btnDisabled = false;\n          this.openRegistration = false;\n          this.closeRegistration.emit(this.openRegistration);\n        } else if (res === 'Result: -1 Email already registered.'){\n          alert(\"There is already an account linked to this email!!\");\n          this.btnDisabled = false;\n        }\n      });\n    }\n    this.btnDisabled = false;\n  }\n\n}\n","\n<div class=\"container p-5\">\n  <div class=\"row mt-5\">\n    <div class=\"col-lg-4 offset-lg-4\">\n      <div class=\"card bg-light\">\n        <div class=\"card-body\">\n          <h4 class=\"text-center\">Registration</h4>\n          <hr>\n          <form>\n            <div class=\"form-group\">\n              <label class=\"form-control-label\">First Name</label>\n              <input type=\"text\" name=\"name\" class=\"form-control\" [(ngModel)]=\"fname\">\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-control-label\">Last Name</label>\n              <input type=\"text\" name=\"name\" class=\"form-control\" [(ngModel)]=\"lname\">\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-control-label\">Email</label>\n              <input type=\"email\" name=\"email\" class=\"form-control\" [(ngModel)]=\"email\">\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-control-label\">Password</label>\n              <input type=\"password\" name=\"password\" class=\"form-control\" [(ngModel)]=\"password\">\n            </div>\n            <div class=\"form-group\">\n              <label class=\"form-control-label\">Confirm Password</label>\n              <input type=\"password\" name=\"password1\" class=\"form-control\" [(ngModel)]=\"password1\">\n            </div>\n            \n            <hr>\n            <button type=\"button\" class=\"btn btn-primary btn-block\" (click)=\"register()\" [disabled]=\"btnDisabled\">Register</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}